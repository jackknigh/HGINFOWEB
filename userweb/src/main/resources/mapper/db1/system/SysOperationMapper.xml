<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.db1.system.SysOperationMapper">
  <resultMap id="BaseResultMap" type="com.dao.entity.system.SysOperation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="dep_code" jdbcType="VARCHAR" property="depCode" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_operation
    where id = #{id,jdbcType=VARCHAR}
  </delete>


  <delete id="batchDelete" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_operation
    where  id in
    <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>



  <insert id="insert" parameterType="com.dao.entity.system.SysOperation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_operation (id, `name`, sort,
    path,  dep_code, creator,
    create_date, update_date, remark
    )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER},
    #{path,jdbcType=VARCHAR},  #{depCode,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR},
    #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
    )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.dao.entity.system.SysOperation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_operation
    set `name` = #{name,jdbcType=VARCHAR},
    path = #{path,jdbcType=VARCHAR},
    sort = #{sort,jdbcType=INTEGER},
    dep_code = #{depCode,jdbcType=VARCHAR},
    update_date = #{updateDate,jdbcType=TIMESTAMP},
    create_date = #{createDate,jdbcType=TIMESTAMP},
    creator = #{creator,jdbcType=VARCHAR},
    remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select *
    from sys_operation
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select  *
    from sys_operation
  </select>
  <!--**********************************************   自定义开始   ********************************************************-->
  <!-- 根据条件分页查询系统  @author XieZX  date 2019/1/9 !-->
  <select id="search" resultMap="BaseResultMap">
    select a.*
    from sys_operation a
    where 1=1
    <if test="name != null">
      and `name` like concat(concat('%',#{name}),'%')
    </if>
  </select>
  <!--<update id="updateStateByIds" >-->
  <!--&lt;!&ndash;-->
  <!--WARNING - @mbg.generated-->
  <!--This element is automatically generated by MyBatis Generator, do not modify.-->
  <!--&ndash;&gt;-->
  <!--update sys_operation-->
  <!--set `state` = #{state,jdbcType=VARCHAR}-->
  <!--where id in-->
  <!--<foreach close=")" collection="ids" index="index" item="id" open="(" separator=",">-->
  <!--#{id,jdbcType=VARCHAR}-->
  <!--</foreach>-->
  <!--</update>-->
</mapper>