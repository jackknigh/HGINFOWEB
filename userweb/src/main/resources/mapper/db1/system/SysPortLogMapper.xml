<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.db1.system.SysPortLogMapper">
    <resultMap id="BaseResultMap" type="com.dao.entity.system.SysPortLog">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="reg_id" jdbcType="VARCHAR" property="regId"/>
        <result column="request_id" jdbcType="VARCHAR" property="requestId"/>
        <result column="organization" jdbcType="VARCHAR" property="organization"/>
        <result column="organization_id" jdbcType="VARCHAR" property="organizationId"/>
        <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime"/>
        <result column="port_name" jdbcType="VARCHAR" property="portName"/>
        <result column="port_type" jdbcType="VARCHAR" property="portType"/>
        <result column="port_sevice" jdbcType="VARCHAR" property="portSevice"/>
        <result column="deal_ip" jdbcType="VARCHAR" property="dealIp"/>
        <result column="operate_code" jdbcType="VARCHAR" property="operateCode"/>
        <result column="operate_condition" jdbcType="VARCHAR" property="operateCondition"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="deal_status" jdbcType="VARCHAR" property="dealStatus"/>
        <result column="error_code" jdbcType="VARCHAR" property="errorCode"/>
        <result column="dep_code" jdbcType="VARCHAR" property="depCode"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from sys_port_log
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.dao.entity.system.SysPortLog">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into sys_port_log (id, user_name, user_id,
        sort, parent_id, reg_id,
        request_id, organization, organization_id,
        operate_time, port_name, port_type,
        port_sevice, deal_ip, operate_code,
        operate_condition, content, deal_status,
        error_code, dep_code, creator,
        create_date, end_date, update_date,
        remark)
        values (#{id,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
        #{sort,jdbcType=INTEGER}, #{parentId,jdbcType=VARCHAR}, #{regId,jdbcType=VARCHAR},
        #{requestId,jdbcType=VARCHAR}, #{organization,jdbcType=VARCHAR}, #{organizationId,jdbcType=VARCHAR},
        #{operateTime,jdbcType=TIMESTAMP}, #{portName,jdbcType=VARCHAR}, #{portType,jdbcType=VARCHAR},
        #{portSevice,jdbcType=VARCHAR}, #{dealIp,jdbcType=VARCHAR}, #{operateCode,jdbcType=VARCHAR},
        #{operateCondition,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{dealStatus,jdbcType=VARCHAR},
        #{errorCode,jdbcType=VARCHAR}, #{depCode,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR},
        #{createDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP},
        #{remark,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.dao.entity.system.SysPortLog">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sys_port_log
        set user_name = #{userName,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=VARCHAR},
        sort = #{sort,jdbcType=INTEGER},
        parent_id = #{parentId,jdbcType=VARCHAR},
        reg_id = #{regId,jdbcType=VARCHAR},
        request_id = #{requestId,jdbcType=VARCHAR},
        organization = #{organization,jdbcType=VARCHAR},
        organization_id = #{organizationId,jdbcType=VARCHAR},
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
        port_name = #{portName,jdbcType=VARCHAR},
        port_type = #{portType,jdbcType=VARCHAR},
        port_sevice = #{portSevice,jdbcType=VARCHAR},
        deal_ip = #{dealIp,jdbcType=VARCHAR},
        operate_code = #{operateCode,jdbcType=VARCHAR},
        operate_condition = #{operateCondition,jdbcType=VARCHAR},
        content = #{content,jdbcType=VARCHAR},
        deal_status = #{dealStatus,jdbcType=VARCHAR},
        error_code = #{errorCode,jdbcType=VARCHAR},
        dep_code = #{depCode,jdbcType=VARCHAR},
        creator = #{creator,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        end_date = #{endDate,jdbcType=TIMESTAMP},
        update_date = #{updateDate,jdbcType=TIMESTAMP},
        remark = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, user_name, user_id, sort, parent_id, reg_id, request_id, organization,
        organization_id, operate_time, port_name, port_type, port_sevice, deal_ip, operate_code,
        operate_condition, content, deal_status, error_code, dep_code, creator, create_date,
        end_date, update_date, remark
        from sys_port_log
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, user_name, user_id, sort, parent_id, reg_id, request_id, organization,
        organization_id, operate_time, port_name, port_type, port_sevice, deal_ip, operate_code,
        operate_condition, content, deal_status, error_code, dep_code, creator, create_date,
        end_date, update_date, remark
        from sys_port_log
    </select>
    <!--**********************************************   自定义开始   ********************************************************-->
    <!-- 根据条件分页查询系统  @author XieZX  date 2019/1/15!-->
    <select id="search" resultMap="BaseResultMap">
        select id, user_name, user_id, sort, parent_id, reg_id, request_id, organization,
        organization_id, operate_time, port_name, port_type, port_sevice, deal_ip, operate_code,
        operate_condition, content, deal_status, error_code, dep_code, creator, create_date,
        end_date, update_date, remark
        from sys_port_log a
        where 1=1
        <if test="startDate != null">
            and a.create_date <![CDATA[ >= ]]> #{_startDate}
        </if>
        <if test="endDate != null">
            and a.create_date <![CDATA[ <= ]]> #{_endDate}
        </if>
        <if test="departIds != null">
            and a.organization in (${departIds})
        </if>
        <if test="portType != null">
            and a.port_type = #{portType}
        </if>
        <if test="userName != null">
            and a.user_name = #{userName}
        </if>
        order by create_date desc
    </select>

    <select id="getLogByParentId" resultType="java.util.HashMap">
        select id, user_name AS userName
        from sys_operate_log where parent_id = 0
        <if test="depCode != null">
            and dep_code = #{depCode}
        </if>
        <if test="startDate != null">
            and DATE_FORMAT(create_date, "%Y-%m-%d") <![CDATA[ >= ]]> #{startDate}
        </if>
        <if test="endDate != null">
            and DATE_FORMAT(create_date, "%Y-%m-%d") <![CDATA[ <= ]]> #{endDate}
        </if>
    </select>

    <select id="getLogBySuperId" resultType="java.util.HashMap">
    select id, user_name AS userName
    from sys_operate_log where super_id = #{superId,jdbcType=VARCHAR}
  </select>

    <select id="getHierarchyNumProportion" resultType="java.util.HashMap">
        select sol.id, sol.user_name AS userName, sd.grade
        from sys_operate_log sol left join sys_depart sd on sd.dep_code = sol.dep_code
        where sol.super_id = 0
        <if test="depCode != null">
            and sol.dep_code = #{depCode}
        </if>
        <if test="startDate != null">
            and DATE_FORMAT(sol.create_date, "%Y-%m-%d") <![CDATA[ >= ]]> #{startDate}
        </if>
        <if test="endDate != null">
            and DATE_FORMAT(sol.create_date, "%Y-%m-%d") <![CDATA[ <= ]]> #{endDate}
        </if>
    </select>
    <select id="getHierarchyNumProportionBySuperId" resultType="java.util.HashMap">
    select sol.id, sol.user_name AS userName, sd.grade
    from sys_operate_log sol left join sys_depart sd on sd.dep_code = sol.dep_code
    where sol.super_id = #{superId}
  </select>

    <select id="logSegmentAnalyse" resultType="java.util.HashMap">
        select count(1) departNum, departNumType from (
        select count(1) departNumType,order_id from (
        select distinct orderid.order_id,depart.grade from sys_operate_log a,sys_operate_log_orderId orderid ,sys_depart depart
        <where>
            a.id = orderid.operator_id and a.dep_code = depart.dep_code
            <if test="null != depCode">
                and a.dep_code LIKE concat(#{depCode},'%')
            </if>
            <if test="null != startDate">
                AND a.operate_time &gt;= #{startDate}
            </if>
            <if test="null != endDate">
                AND a.operate_time &lt;= #{endDate}
            </if>
            <if test="null != operatorTypeList">
                and
                <foreach collection="operatorTypeList" open="(" separator="OR" close=")" item="operatorType">
                    a.operate_type = #{operatorType}
                </foreach>
            </if>
        </where>
        ) a group by order_id ) b group by departNumType


        <!--SELECT COUNT(1)AS sumCount,(d.maxGrade-d.minGrade)AS departNum,depCode,e.shortname AS departName FROM(-->
        <!--SELECT MAX(c.grade) AS maxGrade ,MIN(c.grade)AS minGrade, parentId ,depCode FROM (-->
        <!--SELECT-->
        <!--a.dep_code,-->
        <!--a.parent_id AS parentId,-->
        <!--RPAD(LEFT(a.dep_code,4), 12, 0) AS depCode,-->
        <!--b.grade AS grade-->
        <!--FROM-->
        <!--`sys_operate_log` a-->
        <!--LEFT JOIN sys_depart b-->
        <!--ON a.dep_code =b.dep_code-->
        <!--WHERE-->
        <!--a.parent_id IS NOT NULL-->
        <!--<if test="null != depCodeList">-->
        <!--and-->
        <!--<foreach collection="depCodeList" open="(" separator="OR" close=")" item="depCode">-->
        <!--a.dep_code LIKE  concat(#{depCode},'%')-->
        <!--</foreach>-->
        <!--</if>-->
        <!--<if test="null != startDate">-->
        <!--AND a.operate_time  &gt;=  #{startDate}-->
        <!--</if>-->
        <!--<if test="null != endDate">-->
        <!--AND a.operate_time  &lt;= #{endDate}-->
        <!--</if>-->
        <!--GROUP BY parentId,a.dep_code,grade,depCode)c-->
        <!--GROUP BY parentId,depCode)d-->
        <!--LEFT JOIN sys_depart e-->
        <!--ON d.depCode = e.dep_code-->
        <!--GROUP BY (d.maxGrade-d.minGrade),depCode,departName-->
        <!--ORDER BY (d.maxGrade-d.minGrade) ASC-->
    </select>

    <select id="policeNumProportionNew" resultType="java.util.HashMap">
        select countuser policeNumType,count(countuser) policeNum from (
        select order_id,count(user_id) countUser from
        (select DISTINCT b.order_id ,a.dep_code , a.user_id from sys_operate_log a ,sys_operate_log_orderId b
        <where>
            and a.id = b.operator_id
            <if test="null != depCode">
                and a.dep_code LIKE concat(#{depCode},'%')
            </if>
            <if test="null != startDate">
                AND a.operate_time &gt;= #{startDate}
            </if>
            <if test="null != endDate">
                AND a.operate_time &lt;= #{endDate}
            </if>
            <if test="null != operatorTypeList">
                and
                <foreach collection="operatorTypeList" open="(" separator="OR" close=")" item="operatorType">
                    a.operate_type = #{operatorType}
                </foreach>
            </if>
        </where>
        ) t group by order_id)f group by countUser

        <!--select count(1) as sumCount,depCode,policeNum,e.shortname as departName-->
        <!--from(-->
        <!--select parentId,count(1) as policeNum,depCode from (-->
        <!--SELECT-->
        <!--a.parent_id as parentId,-->
        <!--a.user_name,-->
        <!--RPAD(LEFT(a.dep_code,2), 12, 0) as depCode-->
        <!--FROM-->
        <!--`sys_operate_log` a-->
        <!--WHERE-->
        <!--a.parent_id is not null-->
        <!--<if test="null != depCodeList">-->
        <!--and-->
        <!--<foreach collection="depCodeList" open="(" separator="OR" close=")" item="depCode">-->
        <!--a.dep_code LIKE  concat(#{depCode},'%')-->
        <!--</foreach>-->
        <!--</if>-->
        <!--<if test="null != startDate">-->
        <!--AND a.operate_time  &gt;=  #{startDate}-->
        <!--</if>-->
        <!--<if test="null != endDate">-->
        <!--AND a.operate_time  &lt;= #{endDate}-->
        <!--</if>-->
        <!--GROUP BY parentId,a.user_name,depCode)b-->
        <!--group by parentId,depCode)d-->
        <!--left join sys_depart e-->
        <!--on d.depCode = e.dep_code-->
        <!--group by d.depCode,policeNum,departName-->
        <!--order by policeNum asc-->
    </select>


    <select id="analyseConsumeTime" resultType="java.util.HashMap">
        select sum(b.next_date - b.create_date) consumeSeconds, b.operate_type operateType
        from sys_operate_log a ,sys_operate_log_orderId b
        <where>
            and a.id = b.operator_id
            and b.operate_type in (2,9)
            <if test="null != depCode">
                and a.dep_code LIKE concat(#{depCode},'%')
            </if>
            <if test="null != startDate">
                AND a.operate_time &gt;= #{startDate}
            </if>
            <if test="null != endDate">
                AND a.operate_time &lt;= #{endDate}
            </if>
        </where>
        group by b.operate_type
    </select>

    <select id="analyseTerminal" resultType="java.util.HashMap">
        select countTerminal terminalNumType,count(countTerminal) terminalNum from (
        select order_id,count(order_id) countTerminal from
        (select DISTINCT b.order_id , a.terminal_id from sys_operate_log a ,sys_operate_log_orderId b
        <where>
            and a.id = b.operator_id
            and a.terminal_id is not null
            <if test="null != depCode">
                and a.dep_code LIKE concat(#{depCode},'%')
            </if>
            <if test="null != startDate">
                AND a.operate_time &gt;= #{startDate}
            </if>
            <if test="null != endDate">
                AND a.operate_time &lt;= #{endDate}
            </if>
            <if test="null != operatorTypeList">
                and
                <foreach collection="operatorTypeList" open="(" separator="OR" close=")" item="operatorType">
                    a.operate_type = #{operatorType}
                </foreach>
            </if>
        </where>
        ) t group by order_id)f group by countTerminal
    </select>

    <select id="analyseTerminalOperate" resultType="com.dto.pojo.system.TerminalOperate">
        select a.terminal_id terminalId, a.function_module functionModule ,COUNT(1) operateNum from sys_operate_log a
        <where>
            and terminal_id is not null and function_module is not null
            <if test="null != depCode">
                and a.dep_code LIKE concat(#{depCode},'%')
            </if>
            <if test="null != startDate">
                AND a.operate_time &gt;= #{startDate}
            </if>
            <if test="null != endDate">
                AND a.operate_time &lt;= #{endDate}
            </if>
            <if test="null != operatorTypeList">
                and
                <foreach collection="operatorTypeList" open="(" separator="OR" close=")" item="operatorType">
                    a.operate_type = #{operatorType}
                </foreach>
            </if>
        </where>
        group by terminal_id ,function_module order by terminal_id
    </select>

    <select id="analyseTimeSegment" resultType="java.util.HashMap">
        select HOUR(operate_time) as operateHour,count(1) operateNumber from sys_operate_log a
        <where>
            and operate_time is not null
            <if test="null != depCode">
                and a.dep_code LIKE concat(#{depCode},'%')
            </if>
            <if test="null != startDate">
                AND a.operate_time &gt;= #{startDate}
            </if>
            <if test="null != endDate">
                AND a.operate_time &lt;= #{endDate}
            </if>
            <if test="null != operatorTypeList">
                and
                <foreach collection="operatorTypeList" open="(" separator="OR" close=")" item="operatorType">
                    a.operate_type = #{operatorType}
                </foreach>
            </if>
            group by HOUR(operate_time)
        </where>
    </select>
</mapper>